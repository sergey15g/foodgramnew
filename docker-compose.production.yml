version: '3.9'

services:
  backend:
    image: sergey15g/foodgramnew_backend:latest
    container_name: foodgram_backend
    restart: always
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    networks:
      - foodgram-network

  frontend:
    image: sergey15g/foodgramnew_frontend:latest
    container_name: foodgram_frontend
    restart: always
    networks:
      - foodgram-network

  postgres:
    image: postgres:13.10
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - foodgram-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
    networks:
      - foodgram-network

networks:
  foodgram-network:
    driver: bridge

volumes:
  postgres_data:
